var SpriteObject = (function () {
    function SpriteObject() {
        this.sourceX = 0;
        this.sourceY = 0;
        this.sourceWidth = 64;
        this.sourceHeight = 64;
        this.width = 64;
        this.height = 64;
        this.x = 0;
        this.y = 0;
        this.vx = 0;
        this.vy = 0,
            this.visible = true;
        this.scrollable = true;
    }
    SpriteObject.prototype.centerX = function () {
        return this.x + (this.width / 2);
    };
    SpriteObject.prototype.centerY = function () {
        return this.y + (this.height / 2);
    };
    SpriteObject.prototype.halfWidth = function () {
        return this.width / 2;
    };
    SpriteObject.prototype.halfHeight = function () {
        return this.height / 2;
    };
    return SpriteObject;
}());
;
var Enemy = (function () {
    function Enemy() {
        this.sourceX = 128;
        this.sourceY = 0;
        this.sourceWidth = 64;
        this.sourceHeight = 64;
        this.width = 64;
        this.height = 64;
        this.x = 0;
        this.y = 0;
        this.vx = 0;
        this.vy = 0,
            this.visible = true;
        this.scrollable = true;
        this.NORMAL = [2, 0];
        this.SCARED = [2, 1];
        this.state = this.NORMAL;
        this.speed = 1;
        this.NONE = 0;
        this.UP = 1;
        this.DOWN = 2;
        this.LEFT = 3;
        this.RIGHT = 4;
        this.validDirections = [];
        this.direction = this.NONE;
        this.hunt = true;
    }
    Enemy.prototype.centerX = function () {
        return this.x + (this.width / 2);
    };
    Enemy.prototype.centerY = function () {
        return this.y + (this.height / 2);
    };
    Enemy.prototype.halfWidth = function () {
        return this.width / 2;
    };
    Enemy.prototype.halfHeight = function () {
        return this.height / 2;
    };
    return Enemy;
}());
;
var monsterObject = new Enemy();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JqZWN0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm9iamVjdHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7SUFjRTtRQUNFLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUUsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxXQUFXLEdBQUUsRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxZQUFZLEdBQUUsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxLQUFLLEdBQUUsRUFBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLE1BQU0sR0FBRSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLENBQUMsR0FBRSxDQUFDLENBQUM7UUFDVixJQUFJLENBQUMsQ0FBQyxHQUFFLENBQUMsQ0FBQztRQUNWLElBQUksQ0FBQyxFQUFFLEdBQUUsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLEVBQUUsR0FBRSxDQUFDO1lBQ1YsSUFBSSxDQUFDLE9BQU8sR0FBRSxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLFVBQVUsR0FBRSxJQUFJLENBQUM7SUFDeEIsQ0FBQztJQUdELDhCQUFPLEdBQVA7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNELDhCQUFPLEdBQVA7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUNELGdDQUFTLEdBQVQ7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUNELGlDQUFVLEdBQVY7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0FBQyxBQTFDRCxJQTBDQztBQUFBLENBQUM7QUFFRjtJQTJCRTtRQUNFLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ25CLElBQUksQ0FBQyxPQUFPLEdBQUUsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxXQUFXLEdBQUUsRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxZQUFZLEdBQUUsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxLQUFLLEdBQUUsRUFBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLE1BQU0sR0FBRSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLENBQUMsR0FBRSxDQUFDLENBQUM7UUFDVixJQUFJLENBQUMsQ0FBQyxHQUFFLENBQUMsQ0FBQztRQUNWLElBQUksQ0FBQyxFQUFFLEdBQUUsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLEVBQUUsR0FBRSxDQUFDO1lBQ1YsSUFBSSxDQUFDLE9BQU8sR0FBRSxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLFVBQVUsR0FBRSxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUN6QixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQztRQUMxQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDM0IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFFbkIsQ0FBQztJQUdELHVCQUFPLEdBQVA7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNELHVCQUFPLEdBQVA7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUNELHlCQUFTLEdBQVQ7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUNELDBCQUFVLEdBQVY7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUNILFlBQUM7QUFBRCxDQUFDLEFBcEVELElBb0VDO0FBQUEsQ0FBQztBQUdGLElBQUksYUFBYSxHQUFHLElBQUksS0FBSyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy0tLSBUaGUgc3ByaXRlIG9iamVjdFxyXG5cclxuY2xhc3MgU3ByaXRlT2JqZWN0IHtcclxuICBzb3VyY2VYOiBhbnk7XHJcbiAgc291cmNlWTogYW55O1xyXG4gIHNvdXJjZVdpZHRoOiBhbnk7XHJcbiAgc291cmNlSGVpZ2h0OiBhbnk7XHJcbiAgd2lkdGg6IGFueTtcclxuICBoZWlnaHQ6IGFueTtcclxuICB4OiBhbnk7XHJcbiAgeTogYW55O1xyXG4gIHZ4OiBhbnk7XHJcbiAgdnk6IGFueTtcclxuICB2aXNpYmxlOiB0cnVlO1xyXG4gIHNjcm9sbGFibGU6IHRydWU7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuc291cmNlWCA9IDA7XG4gICAgdGhpcy5zb3VyY2VZPSAwO1xuICAgIHRoaXMuc291cmNlV2lkdGg9IDY0O1xuICAgIHRoaXMuc291cmNlSGVpZ2h0PSA2NDtcbiAgICB0aGlzLndpZHRoPSA2NDtcbiAgICB0aGlzLmhlaWdodD0gNjQ7XG4gICAgdGhpcy54PSAwO1xuICAgIHRoaXMueT0gMDtcbiAgICB0aGlzLnZ4PSAwO1xuICAgIHRoaXMudnk9IDAsXG4gICAgdGhpcy52aXNpYmxlPSB0cnVlO1xuICAgIHRoaXMuc2Nyb2xsYWJsZT0gdHJ1ZTtcbiAgfVxyXG5cclxuICAvL0dldHRlcnNcclxuICBjZW50ZXJYKCkge1xyXG4gICAgcmV0dXJuIHRoaXMueCArICh0aGlzLndpZHRoIC8gMik7XHJcbiAgfVxyXG4gIGNlbnRlclkoKSB7XHJcbiAgICByZXR1cm4gdGhpcy55ICsgKHRoaXMuaGVpZ2h0IC8gMik7XHJcbiAgfVxyXG4gIGhhbGZXaWR0aCgpIHtcclxuICAgIHJldHVybiB0aGlzLndpZHRoIC8gMjtcclxuICB9XHJcbiAgaGFsZkhlaWdodCgpIHtcclxuICAgIHJldHVybiB0aGlzLmhlaWdodCAvIDI7XHJcbiAgfVxyXG59O1xyXG5cclxuY2xhc3MgRW5lbXkge1xyXG4gIHNvdXJjZVg6IGFueTtcclxuICBzb3VyY2VZOiBhbnk7XHJcbiAgc291cmNlV2lkdGg6IGFueTtcclxuICBzb3VyY2VIZWlnaHQ6IGFueTtcclxuICB3aWR0aDogYW55O1xyXG4gIGhlaWdodDogYW55O1xyXG4gIHg6IGFueTtcclxuICB5OiBhbnk7XHJcbiAgdng6IGFueTtcclxuICB2eTogYW55O1xyXG4gIHZpc2libGU6IHRydWU7XHJcbiAgc2Nyb2xsYWJsZTogdHJ1ZTtcclxuICBOT1JNQUw6IGFueTtcclxuICBTQ0FSRUQ6IGFueTtcclxuICBzdGF0ZTogYW55O1xyXG4gIHNwZWVkOiBhbnk7XHJcbiAgTk9ORTogYW55O1xyXG4gIFVQOiBhbnk7XHJcbiAgRE9XTjogYW55O1xyXG4gIExFRlQ6IGFueTtcclxuICBSSUdIVDogYW55O1xyXG4gIHZhbGlkRGlyZWN0aW9uczogYW55O1xyXG4gIGRpcmVjdGlvbjogYW55O1xyXG4gIGh1bnQ6IGFueTtcclxuXHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5zb3VyY2VYID0gMTI4O1xyXG4gICAgdGhpcy5zb3VyY2VZPSAwO1xyXG4gICAgdGhpcy5zb3VyY2VXaWR0aD0gNjQ7XHJcbiAgICB0aGlzLnNvdXJjZUhlaWdodD0gNjQ7XHJcbiAgICB0aGlzLndpZHRoPSA2NDtcclxuICAgIHRoaXMuaGVpZ2h0PSA2NDtcclxuICAgIHRoaXMueD0gMDtcclxuICAgIHRoaXMueT0gMDtcclxuICAgIHRoaXMudng9IDA7XHJcbiAgICB0aGlzLnZ5PSAwLFxyXG4gICAgdGhpcy52aXNpYmxlPSB0cnVlO1xyXG4gICAgdGhpcy5zY3JvbGxhYmxlPSB0cnVlO1xyXG4gICAgdGhpcy5OT1JNQUwgPSBbMiwwXTtcclxuICAgIHRoaXMuU0NBUkVEID0gWzIsMV07XHJcbiAgICB0aGlzLnN0YXRlID0gdGhpcy5OT1JNQUw7XHJcbiAgICB0aGlzLnNwZWVkID0gMTtcclxuICAgIHRoaXMuTk9ORSA9IDA7XHJcbiAgICB0aGlzLlVQID0gMTtcclxuICAgIHRoaXMuRE9XTiA9IDI7XHJcbiAgICB0aGlzLkxFRlQgPSAzO1xyXG4gICAgdGhpcy5SSUdIVCA9IDQ7XHJcbiAgICB0aGlzLnZhbGlkRGlyZWN0aW9ucyA9IFtdO1xyXG4gICAgdGhpcy5kaXJlY3Rpb24gPSB0aGlzLk5PTkU7XHJcbiAgICB0aGlzLmh1bnQgPSB0cnVlO1xyXG5cclxuICB9XHJcblxyXG4gIC8vR2V0dGVyc1xyXG4gIGNlbnRlclgoKSB7XHJcbiAgICByZXR1cm4gdGhpcy54ICsgKHRoaXMud2lkdGggLyAyKTtcclxuICB9XHJcbiAgY2VudGVyWSgpIHtcclxuICAgIHJldHVybiB0aGlzLnkgKyAodGhpcy5oZWlnaHQgLyAyKTtcclxuICB9XHJcbiAgaGFsZldpZHRoKCkge1xyXG4gICAgcmV0dXJuIHRoaXMud2lkdGggLyAyO1xyXG4gIH1cclxuICBoYWxmSGVpZ2h0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuaGVpZ2h0IC8gMjtcclxuICB9XHJcbn07XHJcblxyXG4vLy0tLSBUaGUgbW9uc3RlciBvYmplY3RcclxubGV0IG1vbnN0ZXJPYmplY3QgPSBuZXcgRW5lbXkoKTtcclxuIl19